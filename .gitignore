# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is not recommended to check the JetBrains .gitignore template.
#   https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is not recommended to check the JetBrains .gitignore template.
.idea/

# VS Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~

# Machine Learning / AI specific
# Model checkpoints and saved models
*.pt
*.pth
*.ckpt
*.pkl
*.model
*.h5
*.hdf5
*.pb
*.tflite
*.onnx
*.safetensors

# Training outputs and logs
runs/
logs/
outputs/
checkpoints/
models/
saved_models/
experiments/
results/
wandb/
tensorboard/
lightning_logs/

# Training directories from this project
sft-*/
grpo-*/
ppo-*/
dpo-*/

# Dataset files (often large)
*.csv
*.json
*.jsonl
*.parquet
*.arrow
*.feather
*.h5
*.hdf5
data/
datasets/
raw_data/
processed_data/

# Hugging Face cache
.cache/
~/.cache/huggingface/
.huggingface/

# Accelerate and distributed training
accelerate_config.yaml
.deepspeed_config.json

# MLflow
mlruns/

# DVC (Data Version Control)
.dvc/
.dvcignore

# Jupyter Lab
.jupyter/

# Configuration files with secrets
*.key
*.pem
*.p12
*.pfx
secrets.json
config_secrets.py
.secrets/

# Local development
local/
temp/
tmp/
scratch/
debug/
test_outputs/

# Compressed files
*.zip
*.tar.gz
*.rar
*.7z

# Large files that shouldn't be in git
*.bin
*.dat
*.dump

# Auto-generated documentation
docs/build/
docs/source/_build/

# Profiling data
*.prof
*.profile
prof/

# Coverage reports
htmlcov/
.coverage
coverage.xml

# Node.js (if using any JS tooling)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Docker
.dockerignore
Dockerfile.tmp
docker-compose.override.yml

# Kubernetes
*.k8s.yml
k8s-tmp/

# Backup files
*.bak
*.backup
*.old

# Environment-specific files
.env.local
.env.development
.env.production
.env.test

# IDE and editor specific
*.suo
*.user
*.userosscache
*.sln.docstates
*.vcxproj.filters
*.vcxproj.user

# Temporary files
*.tmp
*.temp
~$*
